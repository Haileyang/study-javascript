{"version":3,"sources":["app.js"],"names":["ajax","XMLHttpRequest","content","document","createElement","root","getElementById","NEWS_URL","CONTENT_URL","getData","url","open","send","JSON","parse","response","newsFeed","ul","window","addEventListener","id","location","hash","substr","newsContent","replace","innerHTML","title","newsList","push","i","console","log","length","comments_count","join"],"mappings":"AAAA,IAAMA,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,IAAI,GAAGF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAb;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB;;AAEA,SAASC,OAAT,CAAkBC,GAAlB,EAAsB;EAClBV,IAAI,CAACW,IAAL,CAAU,KAAV,EAAiBD,GAAjB,EAAsB,KAAtB;EACAV,IAAI,CAACY,IAAL;EAEA,OAAOC,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACe,QAAhB,CAAP;AACH;;AAED,IAAMC,QAAQ,GAAGP,OAAO,CAACF,QAAD,CAAxB;AACA,IAAMU,EAAE,GAAGd,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AAEAc,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsC,YAAU;EAE5C,IAAMC,EAAE,GAAGC,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB,CAArB,CAAX;EACA,IAAMC,WAAW,GAAGf,OAAO,CAACD,WAAW,CAACiB,OAAZ,CAAoB,KAApB,EAA2BL,EAA3B,CAAD,CAA3B;EAEAf,IAAI,CAACqB,SAAL,4FAEUF,WAAW,CAACG,KAFtB;AAIH,CATD,GAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAG,EAAjB;AACAA,QAAQ,CAACC,IAAT,CAAc,MAAd;;AACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmBA,CAAC,EAApB,EAAuB;EACnBC,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACiB,MAArB;EACAL,QAAQ,CAACC,IAAT,kDAEoBb,QAAQ,CAACc,CAAD,CAAR,CAAYV,EAFhC,gBAEuCJ,QAAQ,CAACc,CAAD,CAAR,CAAYH,KAFnD,cAE4DX,QAAQ,CAACc,CAAD,CAAR,CAAYI,cAFxE;AAKH;;AACDN,QAAQ,CAACC,IAAT,CAAc,OAAd,GACA;;AACAxB,IAAI,CAACqB,SAAL,GAAiBE,QAAQ,CAACO,IAAT,CAAc,EAAd,CAAjB,EAAmC","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const ajax = new XMLHttpRequest();  \nconst content = document.createElement('div')\nconst root = document.getElementById('root')\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json'\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json'\n\nfunction getData (url){\n    ajax.open('GET', url, false)\n    ajax.send(); \n\n    return JSON.parse(ajax.response);\n}\n\nconst newsFeed = getData(NEWS_URL);\nconst ul = document.createElement('ul')\n\nwindow.addEventListener('hashchange', function(){\n    \n    const id = location.hash.substr(1)\n    const newsContent = getData(CONTENT_URL.replace('@id', id));\n\n    root.innerHTML = `\n        <span><a href=\"#\">목록으로</a></span>\n        <h1>${newsContent.title}</h1>\n    `\n})\n\n// for(let i=0; i<10; i++){\n//     const div = document.createElement('div')\n//     div.innerHTML = `\n//         <ul>\n//             <li><a href=\"#${newsFeed[i].id}\">${newsFeed[i].title}(${newsFeed[i].comments_count})</a></li>\n//         </ul>\n//     `\n\n//     ul.appendChild(div.firstElementChild)\n\n// }\n\n// root.appendChild(ul)\n// root.appendChild(content)\n\n// 위의 코드는 appendChild를 사용하고있다. 이는 즉 DOM API를 사용해 태그를 컨트롤하므로 하위 코드처럼 제거작업이 필요\n// 제거작업을 위해서는 위의 코드가 하나의 문자열이 될 수 있는지 확인이 필요한데, for문으로 li를 하나하나씩 만들어주므로 하나의 \n// 문자열이 될 수 없고 이를 대체하기 위해서 빈배열과 push를 활용해 코드를 재정비 한다.\n\nconst newsList = [];\nnewsList.push('<ul>')\nfor(let i=0; i<10; i++){\n    console.log(newsFeed.length)\n    newsList.push(`\n        <li>\n            <a href=\"#${newsFeed[i].id}\">${newsFeed[i].title}(${newsFeed[i].comments_count})</a>\n        </li>\n    `)\n}\nnewsList.push('</ul>')\n//newsList 배열이므로 문자열로 넣을 수 없기때문에 join('')을 이용해 문자열로 만들어준다.\nroot.innerHTML = newsList.join('') //join은 각 배열의 요소 즉 태크의 default 구분자로 comma를 가지게 되며, 해당 구분자는 join()안에 명시해 변경 가능하다."]}